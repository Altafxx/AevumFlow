user www-data;
worker_processes auto;
worker_rlimit_nofile 65535;
pid /run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_lua_module.so;

events {
    worker_connections 65535;
    multi_accept on;
}

http {
    lua_package_path '/usr/local/openresty/luajit/share/lua/5.1/?.lua;;';
    lua_package_cpath '/usr/local/openresty/luajit/lib/lua/5.1/?.so;;';

    # Increase worker connections and timeout
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 300s;
    send_timeout 60s;

    # Increase buffer sizes significantly for 4K content
    client_body_buffer_size 512k;
    client_max_body_size 8000M;      # Increased for larger video files
    client_header_buffer_size 128k;
    large_client_header_buffers 4 128k;

    proxy_temp_file_write_size 2m;
    proxy_max_temp_file_size 4096m;  # Added to handle large temporary files

    # Increase timeout values for larger files
    proxy_connect_timeout 600s;      # Increased timeouts
    proxy_read_timeout 600s;
    proxy_send_timeout 600s;

    # HTTPS redirect handling
    map $http_x_forwarded_proto $redirect_to_https {
        default 0;
        http   1;
    }

    server {
        listen 80;
        # vod mode
        vod_mode mapped;

        # Optimize segment settings
        vod_segment_duration 4000;                 # 4 seconds (reduced from 6)
        vod_manifest_segment_durations_mode accurate;
        vod_align_segments_to_key_frames on;
        vod_open_file_thread_pool default;

        # gzip manifests
        gzip on;
        gzip_types application/vnd.apple.mpegurl;

        # file handle caching
        open_file_cache          max=1000 inactive=5m;
        open_file_cache_valid    2m;
        open_file_cache_min_uses 1;
        open_file_cache_errors   on;
        aio on;

        # HTTPS redirect handling using location block
        location / {
            set $do_redirect 0;
            
            access_by_lua_block {
                if os.getenv("LOCALHOST") ~= "true" then
                    if ngx.var.http_x_forwarded_proto == "http" then
                        ngx.var.do_redirect = 1
                    else
                        ngx.header["Content-Security-Policy"] = "upgrade-insecure-requests; block-all-mixed-content"
                    end
                end
            }

            if ($do_redirect = 1) {
                return 301 https://$host$request_uri;
            }

            proxy_pass http://app:3000;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
        }

        location ^~ /video/ {
            alias /etc/nginx/json/;
            vod hls;

            # Reduce cache sizes
            vod_metadata_cache metadata_cache 2048m;    # 2GB
            vod_response_cache response_cache 1024m;    # 1GB
            vod_mapping_cache mapping_cache 512m;       # 512MB
            vod_max_mapping_response_size 4k;
            
            # Optimize segment settings for 4K
            vod_segment_duration 4000;                  # 4 seconds
            vod_manifest_segment_durations_mode accurate;
            vod_align_segments_to_key_frames on;
            vod_open_file_thread_pool default;
            vod_max_frames_size 16m;                    # Added for 4K support
            vod_max_metadata_size 64m;                  # Added for 4K support

            # Optimize for large files
            output_buffers 16 8m;                       # Increased buffer size
            postpone_output 1460;
            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;

            # Add proper MIME types and character set
            charset utf-8;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
                application/json json;
            }
            
            # Enhanced CORS headers
            add_header Access-Control-Allow-Headers '*' always;
            add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range' always;
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS' always;
            add_header Access-Control-Allow-Origin '*' always;
            add_header Cache-Control 'public, max-age=3600' always;
            
            # Force HTTPS for HLS content
            absolute_redirect off;

            # CSP headers handling
            access_by_lua_block {
                if os.getenv("LOCALHOST") ~= "true" and ngx.var.http_x_forwarded_proto == "https" then
                    ngx.header["Content-Security-Policy"] = "upgrade-insecure-requests; block-all-mixed-content"
                end
            }

            # Enable directory listing for debugging
            autoindex on;
            
            # Increase timeouts for streaming
            proxy_read_timeout 600;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;

            # Add buffer settings specific to video location
            proxy_buffer_size 1m;
            proxy_buffers 32 1m;
            proxy_busy_buffers_size 2m;

            # Enable caching
            expires 100d;
        }
    }
}
